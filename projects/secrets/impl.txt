babysitter structure:
---------------------
app: ns_babysitter
sup: ns_babysitter_sup


rpc:call(ns_server:get_babysitter_node(), master_password_keeper, get_password, []).

https://github.com/whitelynx/erlang-pbkdf2/blob/master/src/pbkdf2.erl

kdf:
pbkdf2, bcrypt, scrypt


1. Any process can set the port owner to be any process with port_connect/2.
       need to implement token that strictly connects the port to owning process
2. 


---------------------------------------
memcached password (admin_pass):
created in ns_config_default:default()

used:
dcp_proxy
ebucketmigrator_srv.erl
ns_replicas_builder_utils.erl

ns_config_isasl_sync.erl - to connect to memcached
ns_memcached - connect to component on this node

ns_config_auth - authenticate the component

get_password(special):
goxdcr_rest:special_auth_headers()
  for get_from_goxdcr
    for find_all_replication_docs(Timeout)
        all_local_replication_infos()
        grab_stats(Bucket)
        get_replications_with_remote_info()


index_rest:get_json
        indexer_fts:get_local_status()
        indexer_fts:grab_stats()
        indexer_gsi:get_local_status()
        indexer_gsi:grab_stats()

ns_moxi_sup:rest_pass

query_rest:send
        get_stats()
        refresh_cert()

ns_ports_setup:build_cbauth_env_vars


loopback user (:
1. temporary, not persisted
2. minimum permissions
3. authorized only via cbauth
4. @local_cbauth


ns_config_auth:get_password(special)

--------------------------------------

sasl_password

ns_bucket:sasl_password(BucketProps)

sasl_password(Bucket) ->
    proplists:get_value(sasl_password, Bucket, "").



extract_bucket_props(BucketId, Props) ->


handshake:

cluster: ns_cluster:do_add_node_with_connectivity
Posting node info to engage_cluster on {"127.0.0.1",9001}:
        {clusterCompatibility,262149},
        {version,<<"4.0.0r-1946-gba2eced-enterprise">>},
Reply from engage_cluster on {"127.0.0.1",9001}:
        {<<"clusterCompatibility">>,262149},
ns_cluster:verify_otp_connectivity:639]port_please("n_1", "127.0.0.1") = 21103
ns_cluster:node_add_transaction_finish:793]Started node add transaction by adding node 'n_1@127.0.0.1' to nodes_wanted (group: 0)
ns_cluster<0.143.0>:ns_cluster:do_add_node_engaged_inner:712]Posting the following to complete_join on "127.0.0.1:9001":
        {clusterCompatibility,262149},


joinee:
perform_actual_join(RemoteNode, NewCookie)
         ns_config:update(


262149
262150


cluster sends its encrypted_data_key to engage cluster on joinee (do_add_node_with_connectivity)
if encrypted_data_key is persent -> test it and error out if cannot unlock

cluster sends its encrypted_data_key to complete_join

perform_actual_join:
decrypt admin_pass
if encrypted_data_key is persent -> set it to encryption_service on joinee
                                    encrypt admin_pass


================================================================

ns_config:load_file
ns_config:save_file


--------------collect_info-----------------
read_guts(guts, "memcached_pass"),
need an api to obtain the memcached (diag) password
http://127.0.0.1:9000/diag/getPassword (local only

aead_cipher() =  aes_gcm | chacha20_poly1305
stream_key() =  aes_key() | rc4_key()
block_key() =  aes_key() |  blowfish_key() | des_key()| des3_key()

crypto:block_encrypt(aes_gcm, Key, Ivec, {AAD, PlainText, TagLength}) -> {CipherText, CipherTag}


--------------------------------

def make_curl_task
return ["curl", "-sS", "--proxy", "",
                "-u", "%s:%s" % (user, pwd), url]


    runner.run(
        AllOsTask("product diag header",
                  "",
                  literal = "Found server initargs at %s (%d)" % (guts_initargs_path, len(guts))))

-----------------------------------------------------
curl -v -X POST -d 'oldPassword=blah&newPassword=blah' http://Administrator:asdasd@127.0.0.1:9000/node/controller/changeMasterPassword
curl -v -X POST http://Administrator:asdasd@127.0.0.1:9000/node/controller/rotateDataKey


---------------------------------------------------------------------------

Hi Dave, Aliaksey,

I understand that it is quite late in dev cycle do do such overhaul, but better late than have to deal later with the legacy of complex code. And I'm willing to sacrifice some of my vacation time to do it. 

The coding exercise that I did during past few weeks helped me to free myself from the idea that we will be able to protect anything from the person who gained access to the live system, so the only valid attack we can prevent is when somebody manages to steal disk content. Which basically means that any secrets persisted to disk should be encrypted and anything in memory or on the wire between nodes can be plaintext.

Encrypting erlang communications is a separate issue, and encrypting traffic with browser and between clusters is handled by tls.

So here's the idea I'm toying with:

1. Get rid of global data key, let each node maintain it's own data key
2. Each node decrypts secrets during config loading from disk (in ns_config:load_file)
3. Each node encrypts secrets during config storing to disk (in ns_config:save_file)

Benefits of this approach:
1. Encryption will work independently on each 4.6 node, we won't need to wait until the whole cluster will become 4.6 to enable the encryption
2. No need to re-encrypt memcached password when node joins the cluster.
3. No need to care that all nodes are started with the same passwords, which has to be enforced with the current design during add node and cluster upgrade.
4. Password rotation will be per node and free of any potential races.
5. Way less existing code will be affected by the secrets project, than the current design requires.

What are your thoughts on this?

Thanks,
Artem

ways to specify password:
-------------------------
1. By default password is ""
2. Via env variable: CB_MASTER_PASSWORD
3. From command line propmpt
  - to enable: export CB_WAIT_FOR_MASTER_PASSWORD=true
  - after the node start run the following script: install/bin/cbmaster_password
  - the script will allow you 3 attempts to enter the password


data key maintanance
--------------------
1. Each node maintains its own data key
2. Each node decrypts secrets during config loading from disk
3. Each node encrypts secrets during config storing to disk
4. Passwords on different nodes can differ

rest API'S
----------
1. Change master password:
   curl -v -X POST -d 'oldPassword=blah&newPassword=blah' http://Administrator:asdasd@127.0.0.1:9000/node/controller/changeMasterPassword
   to verify:
     - either try to change password again
     - or stop the node and start it with the new password
     - this should not reencrypt config.dat

2. Rotate data key:
   curl -v -X POST http://Administrator:asdasd@127.0.0.1:9000/node/controller/rotateDataKey
   to verify:
     - make sure that secrets in config.dat are reencrypted (for example search for admin_pass inside of the file)

implementation details:
-----------------------

Encrypted data key is stored in config/encrypted_data_keys

upgrade and join implications:
------------------------------

the secrets functionality does not require upgrade and shoudl not affect nodes ability to join cluster. any 4.6 EE node will provide an ability to enter master password and will store it's secrets encrypted in config.dat

effect on go components:
------------------------
none


--------------------------------------------------------

ns_ports_setup:memcached_spec(Config)


[error_logger:info,2016-09-13T11:18:57.604-07:00,n_0@127.0.0.1:error_logger<0.6.0>:ale_error_logger_handler:do_log:203]
=========================PROGRESS REPORT=========================
          supervisor: {local,ns_server_sup}
             started: [{pid,<0.295.0>},
                       {name,ns_ports_setup},
                       {mfargs,{ns_ports_setup,start,[]}},
                       {restart_type,{permanent,4}},
                       {shutdown,brutal_kill},
                       {child_type,worker}]



[ns_server:debug,2016-09-13T11:18:56.531-07:00,n_0@127.0.0.1:ns_config_isasl_sync<0.207.0>:ns_config_isasl_sync:init:63]isasl_sync init: ["/Users/artem/work/4_6/ns_server/data/n_0/isasl.pw",
                  "_admin","9fc1e45cf02b8c56227ced5812501a55"]


-------------------------------------

func readField(b []byte) ([]byte, []byte) {
	size := b[0]
	return b[1 : size+1], b[size+1:]
}


------------------------------------------------------------------------------------


commit 13e6822fca5f368d688e463f4f60fe01b4787754
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Fri Aug 26 13:30:14 2016 +0200

    Let password files be encrypted on disk
    
    In order to use an encrypted isasl.pw / cbsasl.pw one should
    set the environment variable COUCHBASE_CBSASL_SECRETS. ex:
    
        COUCHBASE_CBSASL_SECRETS={
            "cipher":    "AES_256_cbc",
            "key":    "p/HZKoLI2P5DTZhVjOKzRxcRmFQvES0FWPVr1ogHmZI=",
            "iv":    "SDNiQfMNI+VfMNHI7WEMSw=="
        }
    
    key and iv is base64 encoded versions of the key and iv to use
    
    Change-Id: I8457e63ff176324a801ad655a78268c46f58f56d


commit b1afb4f74064a9c54abd8649f3ebf9e476ba90bd
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Fri Aug 26 13:30:14 2016 +0200

    Let password files be encrypted on disk
    
    In order to use an encrypted isasl.pw / cbsasl.pw one should
    set the environment variable COUCHBASE_CBSASL_SECRETS. ex:
    
        COUCHBASE_CBSASL_SECRETS={
            "cipher":    "AES_256_cbc",
            "key":    "p/HZKoLI2P5DTZhVjOKzRxcRmFQvES0FWPVr1ogHmZI=",
            "iv":    "SDNiQfMNI+VfMNHI7WEMSw=="
        }
    
    key and iv is base64 encoded versions of the key and iv to use
    
    Change-Id: I8457e63ff176324a801ad655a78268c46f58f56d
    Reviewed-on: http://review.couchbase.org/67178
    Tested-by: buildbot <build@couchbase.com>
    Reviewed-by: Dave Rigby <daver@couchbase.com>
    Well-Formed: buildbot <build@couchbase.com>



crypto:block_encrypt(aes_cbc256, Key, Ivec, Data) ->


-define(AES_KEY_SIZE_256, 32).
-define(AES256_IVEC_SIZE, 16).

IVec = crypto:rand_bytes(?AES256_IVEC_SIZE),


Key = crypto:rand_bytes(32)
Ivec = crypto:rand_bytes(16)

CipherText = crypto:block_encrypt(aes_cbc256, Key, IVec, rncryptor_util:enpad(PlainText)),


Key  = <<"abcdefghabcdefgh">>.
IV   = <<"12345678abcdefgh">>.
Text = <<"12345678123456781234567812345678">>.
crypto:aes_cbc_256_encrypt(Key, IV, Text).
crypto:block_encrypt(aes_cbc256, Key, IV, Text).

Key1 = crypto:rand_bytes(32).


-define(AES256_BLOCK_SIZE, 16).    %%  AES uses 128-bit blocks (regardless of key size)

enpad(Bin) ->
  enpad(Bin, ?AES256_BLOCK_SIZE-(byte_size(Bin) rem ?AES256_BLOCK_SIZE)).

%% @private
enpad(Bin, Len) ->
  Pad = list_to_binary(lists:duplicate(Len,Len)),
  <<Bin/binary, Pad/binary>>.


---------------------------------------

./ns_server.babysitter.log:                                     "{\"cipher\":\"AES_256_cbc\",\"key\":\"mC/KO55lJGAVKAiRI0MXJa5295NEoYfYyKwB1lfbO2U=\",\"iv\":\"HMLN9ZsrkrSlQr/7uodGIg==\"}"}]},
./ns_server.babysitter.log:                                      "{\"cipher\":\"AES_256_cbc\",\"key\":\"mC/KO55lJGAVKAiRI0MXJa5295NEoYfYyKwB1lfbO2U=\",\"iv\":\"HMLN9ZsrkrSlQr/7uodGIg==\"}"}]},

./ns_server.debug.log: {ciphers,[{dhe_rsa,aes_256_cbc,sha256},


-----------------------------------

[ns_server:info,2016-10-17T11:55:51.156-07:00,babysitter_of_n_0@127.0.0.1:ns_ports_manager<0.72.0>:ns_child_ports_sup:launch_port:83]supervising port: {memcached,"/Users/artem/work/4_6/install/bin/memcached",
                             ["-C",
                              "/Users/artem/work/4_6/ns_server/data/n_0/config/memcached.json"],
                             [{env,[{"EVENT_NOSELECT","1"},
                                    {"MEMCACHED_TOP_KEYS","5"},
                                    {"ISASL_PWFILE",
                                     "/Users/artem/work/4_6/ns_server/data/n_0/isasl.pw"},
                                    {"COUCHBASE_CBSASL_SECRETS",
                                     "{\"cipher\":\"AES_256_cbc\",\"key\":\"mC/KO55lJGAVKAiRI0MXJa5295NEoYfYyKwB1lfbO2U=\",\"iv\":\"HMLN9ZsrkrSlQr/7uodGIg==\"}"}]},
                              use_stdio,stderr_to_stdout,exit_status,
                              port_server_dont_start,stream]}


[error_logger:info,2016-10-17T11:55:51.157-07:00,babysitter_of_n_0@127.0.0.1:error_logger<0.6.0>:ale_error_logger_handler:do_log:203]
=========================PROGRESS REPORT=========================
          supervisor: {local,ns_child_ports_sup}
             started: [{pid,<0.75.0>},
                       {name,
                           {memcached,
                               "/Users/artem/work/4_6/install/bin/memcached",
                               ["-C",
                                "/Users/artem/work/4_6/ns_server/data/n_0/config/memcached.json"],
                               [{env,
                                    [{"EVENT_NOSELECT","1"},
                                     {"MEMCACHED_TOP_KEYS","5"},
                                     {"ISASL_PWFILE",
                                      "/Users/artem/work/4_6/ns_server/data/n_0/isasl.pw"},
                                     {"COUCHBASE_CBSASL_SECRETS",
                                      "{\"cipher\":\"AES_256_cbc\",\"key\":\"mC/KO55lJGAVKAiRI0MXJa5295NEoYfYyKwB1lfbO2U=\",\"iv\":\"HMLN9ZsrkrSlQr/7uodGIg==\"}"}]},
                                use_stdio,stderr_to_stdout,exit_status,
                                port_server_dont_start,stream]}},
                       {mfargs,
                           {restartable,start_link,
                               [{supervisor_cushion,start_link,
                                    [memcached,5000,infinity,ns_port_server,
                                     start_link,
                                     [#Fun<ns_child_ports_sup.2.49698737>]]},
                                86400000]}},
                       {restart_type,permanent},
                       {shutdown,infinity},
                       {child_type,worker}]



MOXI_SASL_PLAIN_PWD


{"CBAUTH_REVRPC_URL",
                                      "http://%40:7cdab7a071595f921ddfbdc9fbb341ae@127.0.0.1:9000/goxdcr"}]}]}},


----------------------------------------------------------

Couchbases-MBP:ns_server artem$ grep -Hrn 'riquybladclswwpb' logs
logs/n_0/debug.log:913:[ns_server:debug,2016-10-20T16:08:44.627-07:00,n_0@127.0.0.1:<0.214.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:917: {cookie,riquybladclswwpb}]
logs/n_0/debug.log:918:[ns_server:debug,2016-10-20T16:08:44.634-07:00,n_0@127.0.0.1:<0.214.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:965:[ns_server:debug,2016-10-20T16:08:44.640-07:00,n_0@127.0.0.1:<0.223.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:967:[ns_server:debug,2016-10-20T16:08:44.640-07:00,n_0@127.0.0.1:<0.223.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:968:[ns_server:debug,2016-10-20T16:08:44.640-07:00,n_0@127.0.0.1:<0.224.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:972: {cookie,riquybladclswwpb}]
logs/n_0/debug.log:973:[ns_server:debug,2016-10-20T16:08:44.640-07:00,n_0@127.0.0.1:<0.224.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:3141:[ns_server:debug,2016-10-20T16:08:51.516-07:00,n_0@127.0.0.1:<0.539.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:3142:[ns_server:debug,2016-10-20T16:08:51.516-07:00,n_0@127.0.0.1:<0.539.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:3210:[ns_server:debug,2016-10-20T16:08:51.517-07:00,n_0@127.0.0.1:<0.548.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:3211:[ns_server:debug,2016-10-20T16:08:51.517-07:00,n_0@127.0.0.1:<0.550.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:3212:[ns_server:debug,2016-10-20T16:08:51.517-07:00,n_0@127.0.0.1:<0.548.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:3213:[ns_server:debug,2016-10-20T16:08:51.518-07:00,n_0@127.0.0.1:<0.550.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:3377: {cookie,riquybladclswwpb}]
logs/n_0/debug.log:6421:[ns_server:info,2016-10-20T16:09:25.494-07:00,n_0@10.17.5.120:dist_manager<0.131.0>:dist_manager:do_adjust_address:288]Re-setting cookie {riquybladclswwpb,'n_0@10.17.5.120'}
logs/n_0/debug.log:6874:[ns_server:debug,2016-10-20T16:09:25.512-07:00,n_0@10.17.5.120:<0.1305.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@10.17.5.120'], with cookie: riquybladclswwpb
logs/n_0/debug.log:6878:[ns_server:debug,2016-10-20T16:09:25.512-07:00,n_0@10.17.5.120:<0.1305.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@10.17.5.120'], with cookie: riquybladclswwpb
logs/n_0/debug.log:7676:  {otpCookie,<<"riquybladclswwpb">>},
logs/n_0/debug.log:7785:[ns_server:debug,2016-10-20T16:09:25.549-07:00,n_0@10.17.5.120:<0.1359.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:7876:     {otpCookie,<<"riquybladclswwpb">>},
logs/n_0/debug.log:7900:[ns_server:debug,2016-10-20T16:09:25.551-07:00,n_0@10.17.5.120:<0.1359.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@10.17.5.120'], with cookie: riquybladclswwpb
logs/n_0/debug.log:8559:[ns_server:debug,2016-10-20T16:09:27.876-07:00,n_0@10.17.5.120:<0.1513.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:8564: {cookie,riquybladclswwpb}]
logs/n_0/debug.log:8589:[ns_server:debug,2016-10-20T16:09:27.878-07:00,n_0@10.17.5.120:<0.1513.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:11467:    {cookie,riquybladclswwpb}]},
logs/n_0/debug.log:12304:   {cookie,riquybladclswwpb}]},
logs/n_0/debug.log:12753:[ns_server:debug,2016-10-20T16:09:46.318-07:00,n_0@10.17.5.120:<0.211.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:12760:[ns_server:debug,2016-10-20T16:09:46.321-07:00,n_0@10.17.5.120:<0.211.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@10.17.5.120'], with cookie: riquybladclswwpb
logs/n_0/debug.log:12814:[ns_server:debug,2016-10-20T16:09:46.326-07:00,n_0@10.17.5.120:<0.221.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:12815:[ns_server:debug,2016-10-20T16:09:46.326-07:00,n_0@10.17.5.120:<0.222.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_0/debug.log:12904:[ns_server:debug,2016-10-20T16:09:46.327-07:00,n_0@10.17.5.120:<0.221.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@10.17.5.120'], with cookie: riquybladclswwpb
logs/n_0/debug.log:12905:[ns_server:debug,2016-10-20T16:09:46.327-07:00,n_0@10.17.5.120:<0.222.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@10.17.5.120'], with cookie: riquybladclswwpb
logs/n_0/debug.log:13013: {cookie,riquybladclswwpb}]
logs/n_0/info.log:800:[ns_server:info,2016-10-20T16:09:25.494-07:00,n_0@10.17.5.120:dist_manager<0.131.0>:dist_manager:do_adjust_address:288]Re-setting cookie {riquybladclswwpb,'n_0@10.17.5.120'}
logs/n_0/info.log:2091:   {cookie,riquybladclswwpb}]},
logs/n_1/debug.log:2826:                         {<<"otpCookie">>,<<"riquybladclswwpb">>},
logs/n_1/debug.log:2950:                        {<<"otpCookie">>,<<"riquybladclswwpb">>},
logs/n_1/debug.log:3545:     {cookie,riquybladclswwpb}]},
logs/n_1/debug.log:3757: {cookie,riquybladclswwpb}]
logs/n_1/debug.log:4806:     {cookie,riquybladclswwpb}]},
logs/n_1/debug.log:5292:[ns_server:debug,2016-10-20T16:09:27.870-07:00,n_1@127.0.0.1:<0.757.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_1/debug.log:5305:[ns_server:debug,2016-10-20T16:09:27.870-07:00,n_1@127.0.0.1:<0.757.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_1/debug.log:5364:[ns_server:debug,2016-10-20T16:09:27.874-07:00,n_1@127.0.0.1:<0.771.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_1/debug.log:5378:[ns_server:debug,2016-10-20T16:09:27.874-07:00,n_1@127.0.0.1:<0.773.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_1/debug.log:5450:[ns_server:debug,2016-10-20T16:09:27.875-07:00,n_1@127.0.0.1:<0.771.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_1/debug.log:5461:[ns_server:debug,2016-10-20T16:09:27.875-07:00,n_1@127.0.0.1:<0.773.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_1/debug.log:5689: {cookie,riquybladclswwpb}]
logs/n_1/debug.log:7093:               {<<"otpCookie">>,<<"riquybladclswwpb">>},
logs/n_1/debug.log:10548:    {cookie,riquybladclswwpb}]},
logs/n_1/debug.log:11467:   {cookie,riquybladclswwpb}]},
logs/n_1/debug.log:11891:[ns_server:debug,2016-10-20T16:09:46.361-07:00,n_1@127.0.0.1:<0.215.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_1/debug.log:11899:[ns_server:debug,2016-10-20T16:09:46.366-07:00,n_1@127.0.0.1:<0.215.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_1/debug.log:11973:[ns_server:debug,2016-10-20T16:09:46.373-07:00,n_1@127.0.0.1:<0.229.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_1/debug.log:11974:[ns_server:debug,2016-10-20T16:09:46.373-07:00,n_1@127.0.0.1:<0.230.0>:ns_node_disco:do_nodes_wanted_updated_fun:224]ns_node_disco: nodes_wanted updated: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_1/debug.log:11978:[ns_server:debug,2016-10-20T16:09:46.373-07:00,n_1@127.0.0.1:<0.230.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_1/debug.log:11979:[ns_server:debug,2016-10-20T16:09:46.373-07:00,n_1@127.0.0.1:<0.229.0>:ns_node_disco:do_nodes_wanted_updated_fun:230]ns_node_disco: nodes_wanted pong: ['n_0@10.17.5.120','n_1@127.0.0.1'], with cookie: riquybladclswwpb
logs/n_1/debug.log:12154: {cookie,riquybladclswwpb}]
logs/n_1/info.log:1694:   {cookie,riquybladclswwpb}]},
Couchbases-MBP:ns_server artem$ grep -Hrn 'riquybladclswwpb' data
Binary file data/n_0/config/config.dat matches
Binary file data/n_1/config/config.dat matches

----------------------------


     {<0.136.0>,
      [{registered_name,auth},
       {status,waiting},
       {initial_call,{proc_lib,init_p,5}},
       {backtrace,[<<"Program counter: 0x0000000103c49bd0 (gen_server:loop/6 + 264)">>,
                   <<"CP: 0x0000000000000000 (invalid)">>,<<"arity = 0">>,
                   <<>>,
                   <<"0x0000000106d1d960 Return addr 0x0000000103b704d0 (proc_lib:init_p_do_apply/3 + 56)">>,
                   <<"y(0)     []">>,<<"y(1)     infinity">>,
                   <<"y(2)     auth">>,
                   <<"y(3)     {state,nzjczantfcfojmgf,1179675}">>,
                   <<"y(4)     auth">>,<<"y(5)     <0.134.0>">>,<<>>,
                   <<"0x0000000106d1d998 Return addr 0x000000010190db88 (<terminate process normally>)">>,
                   <<"y(0)     Catch 0x0000000103b704f0 (proc_lib:init_p_do_apply/3 + 88)">>,
                   <<>>]},
       {error_handler,error_handler},
       {garbage_collection,[{min_bin_vheap_size,46422},
                            {min_heap_size,233},
                            {fullsweep_after,512},
                            {minor_gcs,5}]},


{otpCookie,<<"nzjczantfcfojmgf">>},
menelaus_web_cache

nodes_info = [{struct,
{otpCookie,<<"nzjczantfcfojmgf">>},


remove cbreset_password script
    
    since it requires unencrypted cookie in the config.dat
    this script will be replaced by the CLI command based on local
    /controller/resetAdminPassword REST API

------------------------------------

MB-20700: Add the ability to set the master password from couchbase-cli
    
    Change-Id: I3e01cc8d19442bb29075bae8e4bcf8be0deb5aed
    Reviewed-on: http://review.couchbase.org/69194

Author: Mike Wiederhold <mikewied06@gmail.com>
Date:   Mon Oct 17 13:56:38 2016 -0700

    MB-20700: Add master-password command to couchbase-cli
    http://review.couchbase.org/68837



couchbase-cli master-password -c 127.0.0.1:9000 -u Administrator -p password --new-password
couchbase-cli master-password -c 127.0.0.1:9000 -u Administrator -p password --rotate-data-key
install/bin/couchbase-cli master-password -c 127.0.0.1:9000 --send-password --config-path /Users/artem/work/4_6/ns_server/data/n_0


--------------------------------------

C:\>"C:\Program Files\Couchbase\Server\erts-5.10.4.0.0.1\bin\erlsrv" list Couchb
aseServer
Service name: CouchbaseServer
StopAction: ns_babysitter_bootstrap:stop().
OnFail: restart
Machine: C:\Program Files\Couchbase\Server\erts-5.10.4.0.0.1\bin\erl.exe
WorkDir: C:\Program Files\Couchbase\Server\bin\..\bin
Name: babysitter_of_ns_1@127.0.0.1
Priority: default
DebugType: none
Args: -hidden +A 16 +P 327680 -env ERL_FULLSWEEP_AFTER 512 -env ERL_MAX_PORTS 10
000 -pa  ../lib/couchdb/plugins/gc-couchbase-1.0.0/ebin ../lib/couchdb/plugins/v
tree-0.1.0/ebin ../lib/couchdb/plugins/wkb-1.2.0/ebin -sasl -setcookie nocookie
-ns_server config_path '../etc/couchbase/static_config' -couch_ini ../etc/couchd
b/default.ini ../etc/couchdb/local.ini ../etc/couchdb/default.d/geocouch.ini ../
etc/couchdb/default.d/capi.ini ../etc/runtime.ini -kernel inet_dist_listen_min 2
1100 inet_dist_listen_max 21299 -run ns_babysitter_bootstrap override_resolver -
-
InternalServiceName: CouchbaseServer
Comment:
Env:
 



dir "C:\Program Files\Couchbase\Server\bin\..\var\lib\couchbase"

-ns_babysitter cookiefile ..\var\lib\couchbase\couchbase-server.cookie 

Remove unnecessary spaces.
MB-21823 encrypt email password in config.dat
MB-21805 audit master password change and data key rotation
MB-21686 remove cbmaster_password script
Make sure that stats_archiver never spawns two savers.
Flush cascade/truncate messages just in case.
Filter out unnecessary stats events early.
Give ns_server/babysitter/couchdb processes recognizable names.
MB-21746 Don't include pids into process stats.
MB-21746 Collapse stats for processes with the same names.



Couchbases-MacBook-Pro:ns_server artem$ ../install/bin/couchbase-cli master-password -c localhost:9000 -u Administrator -p asdasd --send-password --config-path /Users/artem/work/spock/ns_server/data/n_0
Enter master password:
ERROR: Either the node is down or password was already supplied

(cb-FcMkUAqFWSxnzyynsSCv@127.0.0.1)1> Res = rpc:call('babysitter_of_n_0@127.0.0.1', encryption_service, set_password, ["c"]).
{error,not_allowed}
