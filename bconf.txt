    {ok, DBSubDir} = ns_storage_conf:this_node_bucket_dbdir(BucketName),
    [{static, "ht_locks=~B", nocheck,
      proplists:get_value(
        ht_locks, BucketConfig,
        misc:getenv_int("MEMBASE_HT_LOCKS", 47))},
     {dynamic, "max_size=~B", "ep_max_size", {"max_size", flush},
      proplists:get_value(ram_quota, BucketConfig)},
     {static, "dbname=~s", "ep_dbname", DBSubDir},
     {static, "backend=~p", nocheck, couchdb},
     {static, "couch_bucket=~s", nocheck, BucketName},
     {static, "max_vbuckets=~B", nocheck,
      proplists:get_value(num_vbuckets, BucketConfig)},
     {static, "alog_path=~s", nocheck, filename:join(DBSubDir, "access.log")},
     {static, "data_traffic_enabled=~p", nocheck, false},
     {static, "max_num_workers=~B", maybe_reload("ep_max_num_workers"),
      proplists:get_value(num_threads, BucketConfig, 3)},
     {static, "uuid=~s", nocheck, proplists:get_value(uuid, BucketConfig)},
     {static, "conflict_resolution_type=~s", nocheck,
      ns_bucket:conflict_resolution_type(BucketConfig)},
     {static, "bucket_type=~s", nocheck,
      storage_mode_to_bucket_type(StorageMode)},
     eviction_policy_cfg(StorageMode, BucketConfig),
     {dynamic, undefined, "ep_hlc_drift_ahead_threshold_us",
      {"hlc_drift_ahead_threshold_us", vbucket}, DriftAheadThreshold},
     {dynamic, undefined, "ep_hlc_drift_behind_threshold_us",
      {"hlc_drift_behind_threshold_us", vbucket}, DriftBehindThreshold},
     {dynamic, "ephemeral_metadata_purge_age=~p",
      "ep_ephemeral_metadata_purge_age"
      {"ephemeral_metadata_purge_age", flush},
      ephemeral_metadata_purge_age(StorageMode, BucketConfig)},
     {dynamic, "max_ttl=~B", "ep_max_ttl", {"max_ttl", flush},
      proplists:get_value(max_ttl, BucketConfig)},
     {static, "ht_size=~B", nocheck,
      proplists:get_value(ht_size, BucketConfig,
                          misc:getenv_int("MEMBASE_HT_SIZE", 0))},
     {dynamic, "compression_mode=~p", "ep_compression_mode",
      {"compression_mode", flush},
      proplists:get_value(compression_mode, BucketConfig)}],

